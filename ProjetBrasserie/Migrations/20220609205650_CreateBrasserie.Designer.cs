// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetBrasserie.Models;

namespace ProjetBrasserie.Migrations
{
    [DbContext(typeof(BrasserieDbContext))]
    [Migration("20220609205650_CreateBrasserie")]
    partial class CreateBrasserie
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetBrasserie.Models.Biere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrasserieId")
                        .HasColumnType("int");

                    b.Property<decimal>("Degre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrasserieId");

                    b.ToTable("Bieres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrasserieId = 1,
                            Degre = 6m,
                            Nom = "Maredsous Blonde",
                            Prix = 2.6m
                        },
                        new
                        {
                            Id = 2,
                            BrasserieId = 1,
                            Degre = 8m,
                            Nom = "Maredsous Brune",
                            Prix = 3m
                        },
                        new
                        {
                            Id = 3,
                            BrasserieId = 1,
                            Degre = 10m,
                            Nom = "Maredsous Triple",
                            Prix = 3m
                        },
                        new
                        {
                            Id = 4,
                            BrasserieId = 2,
                            Degre = 8m,
                            Nom = "La Chouffe",
                            Prix = 2.5m
                        },
                        new
                        {
                            Id = 5,
                            BrasserieId = 2,
                            Degre = 8m,
                            Nom = "Cherry Chouffe",
                            Prix = 2.5m
                        },
                        new
                        {
                            Id = 6,
                            BrasserieId = 3,
                            Degre = 5.8m,
                            Nom = "Westvleteren Blond",
                            Prix = 3.2m
                        },
                        new
                        {
                            Id = 7,
                            BrasserieId = 3,
                            Degre = 8m,
                            Nom = "Westvleteren 8",
                            Prix = 3.5m
                        },
                        new
                        {
                            Id = 8,
                            BrasserieId = 3,
                            Degre = 10.2m,
                            Nom = "Westvleteren 12",
                            Prix = 3.5m
                        });
                });

            modelBuilder.Entity("ProjetBrasserie.Models.Brasserie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brasseries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "Abbaye de Maredsous"
                        },
                        new
                        {
                            Id = 2,
                            Nom = "Brasserie d'Achouffe"
                        },
                        new
                        {
                            Id = 3,
                            Nom = "Trappist Westvleteren"
                        });
                });

            modelBuilder.Entity("ProjetBrasserie.Models.Grossiste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grossistes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "GeneDrinks"
                        },
                        new
                        {
                            Id = 2,
                            Nom = "Top Beer"
                        });
                });

            modelBuilder.Entity("ProjetBrasserie.Models.GrossisteStock", b =>
                {
                    b.Property<int>("GrossisteId")
                        .HasColumnType("int");

                    b.Property<int>("BiereId")
                        .HasColumnType("int");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("GrossisteId", "BiereId");

                    b.HasIndex("BiereId");

                    b.ToTable("GrossisteStocks");

                    b.HasData(
                        new
                        {
                            GrossisteId = 2,
                            BiereId = 7,
                            Quantite = 20
                        },
                        new
                        {
                            GrossisteId = 2,
                            BiereId = 4,
                            Quantite = 15
                        },
                        new
                        {
                            GrossisteId = 1,
                            BiereId = 1,
                            Quantite = 30
                        },
                        new
                        {
                            GrossisteId = 1,
                            BiereId = 6,
                            Quantite = 15
                        },
                        new
                        {
                            GrossisteId = 1,
                            BiereId = 2,
                            Quantite = 25
                        });
                });

            modelBuilder.Entity("ProjetBrasserie.Models.Biere", b =>
                {
                    b.HasOne("ProjetBrasserie.Models.Brasserie", "Brasserie")
                        .WithMany("Bieres")
                        .HasForeignKey("BrasserieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brasserie");
                });

            modelBuilder.Entity("ProjetBrasserie.Models.GrossisteStock", b =>
                {
                    b.HasOne("ProjetBrasserie.Models.Biere", "Biere")
                        .WithMany("Stocks")
                        .HasForeignKey("BiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetBrasserie.Models.Grossiste", "Grossiste")
                        .WithMany("Stocks")
                        .HasForeignKey("GrossisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Biere");

                    b.Navigation("Grossiste");
                });

            modelBuilder.Entity("ProjetBrasserie.Models.Biere", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("ProjetBrasserie.Models.Brasserie", b =>
                {
                    b.Navigation("Bieres");
                });

            modelBuilder.Entity("ProjetBrasserie.Models.Grossiste", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
